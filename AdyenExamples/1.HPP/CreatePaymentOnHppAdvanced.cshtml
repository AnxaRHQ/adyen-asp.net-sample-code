@using System.IO.Compression
@using System.Security.Cryptography;
@using System.Text

@*
    * Create Payment On Hosted Payment Page (HPP) Advanced
    *
    * The Adyen Hosted Payment Pages (HPPs) provide a flexible, secure and easy way to allow shoppers to pay for goods or
    * services. Rather than submitting a simple request containing the required fields we offer a possibility to post even
    * more variables to our HPP. This code example will show you which variables can be posted and why.
    *
    * @link /1.HPP/CreatePaymentOnHppAdvanced.cshtml
    * @author Created by Adyen - Payments Made Easy
*@

@{
    /**
     * General HPP settings
     * - hppUrl: URL of the Adyen HPP to submit the form to
     * - hmacKey: shared secret key used to encrypt the signature
     *
     * Both variables are dependent on the environment which should be used (Test/Live).
     * HMAC key can be set up: Adyen CA >> Skins >> Choose your Skin >> Edit Tab >> Edit HMAC key for Test & Live.
     */
    string hppUrl = "https://test.adyen.com/hpp/pay.shtml";
    string hmacKey = "YourHmacSecretKey";

    /**
     * Defining variables
     * The HPP requires certain variables to be posted in order to create a payment possibility for the shopper.
     *
     * The variables that you can post to the HPP are the following:
     *
     * merchantReference    : Your reference for this payment.
     * paymentAmount        : The transaction amount in minor units (e.g. EUR 1,00 = 100).
     * currencyCode         : The three character ISO currency code.
     * shipBeforeDate       : The date by which the goods or services specifed in the order must be shipped.
     *                        Format: YYYY-MM-DD
     * skinCode             : The code of the skin to be used for the payment.
     * merchantAccount      : The merchant account for which you want to process the payment.
     * sessionValidity      : The time by which a payment needs to have been made.
     *                        Format: YYYY-MM-DDThh:mm:ssTZD
     * shopperLocale        : A combination of language code and country code used to specify the language to be
     *                        used in the payment session (e.g. en_GB).
     * orderData            : A fragment of HTML/text that will be displayed on the HPP. (optional)
     * countryCode          : Country code according to ISO_3166-1_alpha-2 standard. (optional)
     * shopperEmail         : The shopper's email address. (recommended)
     * shopperReference     : An ID that uniquely identifes the shopper, such as a customer id. (recommended)
     * allowedMethods       : A comma-separated list of allowed payment methods, i.e. "ideal,mc,visa". (optional)
     * blockedMethods       : A comma-separated list of blocked payment methods, i.e. "ideal,mc,visa". (optional)
     * offset               : An integer that is added to the normal fraud score. (optional)
     * merchantSig          : The HMAC signature used by Adyen to test the validy of the form.
     *
     * recurringContract    : Can be "ONECLICK", "RECURRING" or "ONECLICK,RECURRING". (optional)
     *                        This allows you to store the payment details as a ONECLICK and/or RECURRING contract.
     *                        Please note that if you supply recurringContract, shopperEmail and shopperReference
     *                        become mandatory. Please view the recurring examples in the repository as well.
     * shopperStatement     : Submit a variable shopper statement. (optional)
     * merchantReturnData   : This field will be passed back as-is on the return URL when the shopper completes
     *                        (or abandons) the payment and returns to your shop. (optional)
     * brandCode            : The payment method the shopper likes to pay with, i.e. ideal. (optional)
     * issuerId             : If brandCode specifies a redirect payment method, the issuer can be defined here
     *                        forcing the HPP to redirect directly to the payment method. (optional)
     */
    string merchantReference = "TEST-PAYMENT-" + DateTime.Now.ToString("yyyy-MM-dd-HH:mm:ss");
    string paymentAmount = "199";
    string currencyCode = "EUR";
    string shipBeforeDate = DateTime.Now.AddDays(3).ToString("yyyy-MM-dd");
    string skinCode = "YourSkinCode";
    string merchantAccount = "YourMerchantAccount";
    string sessionValidity = DateTime.Now.AddDays(1).ToString("yyyy-MM-ddTHH:mm:ssK");
    string shopperLocale = "en_US";
    string orderData = CompressString("Orderdata to display on the HPP can be put here");
    string countryCode = "NL";
    string shopperEmail = "";
    string shopperReference = "";
    string allowedMethods = "";
    string blockedMethods = "";
    string offset = "";

    string recurringContract = "";
    string shopperStatement = "";
    string merchantReturnData = "";

    // By providing the brandCode and issuerId the HPP will redirect the shopper directly to this payment method.
    // Please note: the form should be posted to https://test.adyen.com/hpp/details.shtml rather than pay.shtml,
    // change the hppUrl accordingly. While posting to details.shtml countryCode becomes a required as well.
    string brandCode = "";
    string issuerId = "";

    /**
     * Collecting Shopper Information
     *
     * Address Verification System (AVS) is a security feature that verifies the billing address and/or
     * delivery address and/or shopper information of the card holder. To enable AVS the Billing Address Fields
     * (AVS) field must be checked under Skin Options for each skin you wish to use. The following variables
     * can be send to the HPP:
     *
     * - billingAddress.street             : The street name.
     * - billingAddress.houseNumberOrName  : The house number (or name).
     * - billingAddress.city               : The city.
     * - billingAddress.postalCode         : The postal/zip code.
     * - billingAddress.stateOrProvince    : The state or province.
     * - billingAddress.country            : The country in ISO 3166-1 alpha-2 format (e.g. NL).
     * - billingAddressType                : Specify whether the shopper is allowed to view and/or modify these
     *                                       personal details (see below).
     * - billingAddressSig                 : A separate merchant signature for these fields.
     *
     * - deliveryAddress.street            : The street name.
     * - deliveryAddress.houseNumberOrName : The house number (or name).
     * - deliveryAddress.city              : The city.
     * - deliveryAddress.postalCode        : The postal/zip code.
     * - deliveryAddress.stateOrProvince   : The state or province.
     * - deliveryAddress.country           : The country in ISO 3166-1 alpha-2 format (e.g. NL).
     * - deliveryAddressType               : Specify whether the shopper is allowed to view and/or modify these
     *                                       personal details (see below).
     * - deliveryAddressSig                : A separate merchant signature for these fields.
     *
     *  - shopper.firstName                 : The shopper's firstname.
     * - shopper.infix                     : The shopper infx.
     * - shopper.lastName                  : The shopper's lastname.
     * - shopper.gender                    : The shopper's gender (MALE/FEMALE).
     * - shopper.dateOfBirthDayOfMonth     : The day of the month of the shopper's birth.
     * - shopper.dateOfBirthMonth          : The month of the shopper's birth.
     * - shopper.dateOfBirthYear           : The year of the shopper's birth.
     * - shopper.telephoneNumber           : The shopper's telephone number.
     * - shopperType                       : This field can be used if validation of the shopper fields is desired.
     * - shopperSig                        : A separate merchant signature for these fields.
     *                                       (optional if shopperType is not supplied)
     *
     * Please note: billingAddressType, deliveryAddressType and shopperType can have the following values:
     * - Not supplied: modifiable / visible
     * - 1: unmodifiable / visible
     * - 2: unmodifiable / invisible
     */
    string billingAddressStreet = "Simon Carmiggeltstraat";
    string billingAddressHouseNumberOrName = "6-50";
    string billingAddressCity = "Amsterdam";
    string billingAddressPostalCode = "1011 DJ";
    string billingAddressStateOrProvince = "";
    string billingAddressCountry = "NL";
    string billingAddressType = "";

    string deliveryAddressStreet = "Simon Carmiggeltstraat";
    string deliveryAddressHouseNumberOrName = "6-50";
    string deliveryAddressCity = "Amsterdam";
    string deliveryAddressPostalCode = "1011 DJ";
    string deliveryAddressStateOrProvince = "";
    string deliveryAddressCountry = "NL";
    string deliveryAddressType = "1";

    string shopperFirstName = "John";
    string shopperInfix = "";
    string shopperLastName = "Doe";
    string shopperGender = "MALE";
    string shopperDateOfBirthDayOfMonth = "05";
    string shopperDateOfBirthMonth = "10";
    string shopperDateOfBirthYear = "1990";
    string shopperTelephoneNumber = "+31612345678";
    string shopperType = "1";

    /**
     * Signing the form
     *
     * The signatures are used by Adyen to verify if the posted data is not altered by the shopper. The signatures
     * must be encrypted according to the procedures below.
     */
    string signingString;

    // Compute the merchantSig
    signingString = paymentAmount + currencyCode + shipBeforeDate + merchantReference + skinCode + merchantAccount
                  + sessionValidity + shopperEmail + shopperReference + recurringContract + allowedMethods
                  + blockedMethods + shopperStatement + merchantReturnData + billingAddressType + deliveryAddressType
                  + shopperType + offset;
    string merchantSig = CalculateHMAC(hmacKey, signingString);

    // Compute the billingAddressSig
    signingString = billingAddressStreet + billingAddressHouseNumberOrName + billingAddressCity
                  + billingAddressPostalCode + billingAddressStateOrProvince + billingAddressCountry;
    string billingAddressSig = CalculateHMAC(hmacKey, signingString);

    // Compute the deliveryAddressSig
    signingString = deliveryAddressStreet + deliveryAddressHouseNumberOrName + deliveryAddressCity
                  + deliveryAddressPostalCode + deliveryAddressStateOrProvince + deliveryAddressCountry;
    string deliveryAddressSig = CalculateHMAC(hmacKey, signingString);

    // Compute the shopperSig
    signingString = shopperFirstName + shopperInfix + shopperLastName + shopperGender + shopperDateOfBirthDayOfMonth
                  + shopperDateOfBirthMonth + shopperDateOfBirthYear + shopperTelephoneNumber;
    string shopperSig = CalculateHMAC(hmacKey, signingString);

}

@functions {
    // Generates GZIP compressed and Base64 encoded string.
    string CompressString(string input)
    {
        byte[] buffer = Encoding.UTF8.GetBytes(input);

        using (var output = new MemoryStream())
        {
            using (var gzip = new GZipStream(output, CompressionMode.Compress))
            {
                gzip.Write(buffer, 0, buffer.Length);
                gzip.Close();
                return Convert.ToBase64String(output.ToArray());
            }
        }
    }

    // Computes the Base64 encoded signature using the HMAC algorithm with the SHA-1 hashing function.
    string CalculateHMAC(string hmacKey, string signingString)
    {
        byte[] key = Encoding.UTF8.GetBytes(hmacKey);
        byte[] data = Encoding.UTF8.GetBytes(signingString);

        using (HMACSHA1 hmac = new HMACSHA1(key))
        {
            byte[] result = hmac.ComputeHash(data);
            return Convert.ToBase64String(result);
        }
    }
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Adyen - Create Payment On Hosted Payment Page (HPP) Advanced</title>
</head>
<body>
    <form method="POST" action="@hppUrl" target="_blank">
        <input type="hidden" name="merchantReference" value="@merchantReference">
        <input type="hidden" name="paymentAmount" value="@paymentAmount">
        <input type="hidden" name="currencyCode" value="@currencyCode">
        <input type="hidden" name="shipBeforeDate" value="@shipBeforeDate">
        <input type="hidden" name="skinCode" value="@skinCode">
        <input type="hidden" name="merchantAccount" value="@merchantAccount">
        <input type="hidden" name="sessionValidity" value="@sessionValidity">
        <input type="hidden" name="shopperLocale" value="@shopperLocale">
        <input type="hidden" name="orderData" value="@orderData">
        <input type="hidden" name="countryCode" value="@countryCode">
        <input type="hidden" name="shopperEmail" value="@shopperEmail">
        <input type="hidden" name="shopperReference" value="@shopperReference">
        <input type="hidden" name="recurringContract" value="@recurringContract">
        <input type="hidden" name="allowedMethods" value="@allowedMethods">
        <input type="hidden" name="blockedMethods" value="@blockedMethods">
        <input type="hidden" name="shopperStatement" value="@shopperStatement">
        <input type="hidden" name="merchantReturnData" value="@merchantReturnData">
        <input type="hidden" name="offset" value="@offset">
        <input type="hidden" name="brandCode" value="@brandCode">
        <input type="hidden" name="issuerId" value="@issuerId">

        <!-- Billing address -->
        <input type="hidden" name="billingAddress.street" value="@billingAddressStreet">
        <input type="hidden" name="billingAddress.houseNumberOrName" value="@billingAddressHouseNumberOrName">
        <input type="hidden" name="billingAddress.city" value="@billingAddressCity">
        <input type="hidden" name="billingAddress.postalCode" value="@billingAddressPostalCode">
        <input type="hidden" name="billingAddress.stateOrProvince" value="@billingAddressStateOrProvince">
        <input type="hidden" name="billingAddress.country" value="@billingAddressCountry">
        <input type="hidden" name="billingAddressType" value="@billingAddressType">

        <!-- Delivery address -->
        <input type="hidden" name="deliveryAddress.street" value="@deliveryAddressStreet">
        <input type="hidden" name="deliveryAddress.houseNumberOrName" value="@deliveryAddressHouseNumberOrName">
        <input type="hidden" name="deliveryAddress.city" value="@deliveryAddressCity">
        <input type="hidden" name="deliveryAddress.postalCode" value="@deliveryAddressPostalCode">
        <input type="hidden" name="deliveryAddress.stateOrProvince" value="@deliveryAddressStateOrProvince">
        <input type="hidden" name="deliveryAddress.country" value="@deliveryAddressCountry">
        <input type="hidden" name="deliveryAddressType" value="@deliveryAddressType">

        <!-- Shopper -->
        <input type="hidden" name="shopper.firstName" value="@shopperFirstName">
        <input type="hidden" name="shopper.infix" value="@shopperInfix">
        <input type="hidden" name="shopper.lastName" value="@shopperLastName">
        <input type="hidden" name="shopper.gender" value="@shopperGender">
        <input type="hidden" name="shopper.dateOfBirthDayOfMonth" value="@shopperDateOfBirthDayOfMonth">
        <input type="hidden" name="shopper.dateOfBirthMonth" value="@shopperDateOfBirthMonth">
        <input type="hidden" name="shopper.dateOfBirthYear" value="@shopperDateOfBirthYear">
        <input type="hidden" name="shopper.telephoneNumber" value="@shopperTelephoneNumber">
        <input type="hidden" name="shopperType" value="@shopperType">

        <!-- Signatures -->
        <input type="hidden" name="billingAddressSig" value="@billingAddressSig">
        <input type="hidden" name="deliveryAddressSig" value="@deliveryAddressSig">
        <input type="hidden" name="shopperSig" value="@shopperSig">
        <input type="hidden" name="merchantSig" value="@merchantSig">

        <input type="submit" value="Create payment">
    </form>
</body>
</html>