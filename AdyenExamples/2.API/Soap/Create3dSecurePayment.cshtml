@using Adyen.Services.Payment
@using System.ServiceModel

@*
    * Create 3D Secure payment (SOAP)
    *
    * 3D Secure (Verifed by VISA / MasterCard SecureCode) is an additional authentication
    * protocol that involves the shopper being redirected to their card issuer where their
    * identity is authenticated prior to the payment proceeding to an authorisation request.
    *
    * In order to start processing 3D Secure transactions, the following changes are required:
    * 1. Your Merchant Account needs to be confgured by Adyen to support 3D Secure. If you would
    *    like to have 3D Secure enabled, please submit a request to the Adyen Support Team (support@adyen.com).
    * 2. Your integration should support redirecting the shopper to the card issuer and submitting
    *    a second API call to complete the payment.
    *
    * This example demonstrates the initial API call to create the 3D secure payment using SOAP,
    * and shows the redirection the the card issuer.
    * See the API Manual for a full explanation of the steps required to process 3D Secure payments.
    *
    * @link /2.API/Soap/Create3dSecurePayment.cshtml
    * @author Created by Adyen - Payments Made Easy
*@

@{
    /**
     * SOAP settings
     * - apiUrl: URL of the Adyen API you are using (Test/Live)
     * - wsUser: your web service user
     * - wsPassword: your web service user's password
     */
    string apiUrl = "https://pal-test.adyen.com/pal/servlet/Payment/v17";
    string wsUser = "YourWSUser";
    string wsPassword = "YourWSUserPassword";

    /**
     * Create SOAP client, using generated Service Reference (see App_WebReferences folder).
     * The Service Reference was added in Visual Studio using Website >> Add Service Reference.
     */
    PaymentPortTypeClient client = new PaymentPortTypeClient("PaymentHttpPort", apiUrl);

    // Set HTTP Authentication
    ((BasicHttpBinding)client.Endpoint.Binding).Security.Transport.ClientCredentialType = HttpClientCredentialType.Basic;
    client.ClientCredentials.UserName.UserName = wsUser;
    client.ClientCredentials.UserName.Password = wsPassword;

    /**
     * A payment can be submitted by sending a PaymentRequest to the authorise action of the web service.
     * The initial API call for both 3D Secure and non-3D Secure payments is almost identical.
     * However, for 3D Secure payments, you must supply the browserInfo object as a sub-element of the payment request.
     * This is a container for the acceptHeader and userAgent of the shopper's browser.
     *
     * - merchantAccount           : The merchant account for which you want to process the payment
     * - amount
     *     - currency              : The three character ISO currency code.
     *     - value                 : The transaction amount in minor units (e.g. EUR 1,00 = 100).
     * - reference                 : Your reference for this payment.
     * - shopperIP                 : The shopper's IP address. (recommended)
     * - shopperEmail              : The shopper's email address. (recommended)
     * - shopperReference          : An ID that uniquely identifes the shopper, such as a customer id. (recommended)
     * - fraudOffset               : An integer that is added to the normal fraud score. (optional)
     * - card
     *     - expiryMonth           : The expiration date's month written as a 2-digit string,
     *                               padded with 0 if required (e.g. 03 or 12).
     *     - expiryYear            : The expiration date's year written as in full (e.g. 2016).
     *     - holderName            : The card holder's name, as embossed on the card.
     *     - number                : The card number.
     *     - cvc                   : The card validation code, which is the CVC2 (MasterCard),
     *                               CVV2 (Visa) or CID (American Express).
     *     - billingAddress (recommended)
     *         - street            : The street name.
     *         - houseNumberOrName : The house number (or name).
     *         - city              : The city.
     *         - postalCode        : The postal/zip code.
     *         - stateOrProvince   : The state or province.
     *         - country           : The country in ISO 3166-1 alpha-2 format (e.g. NL).
     * - browserInfo
     *     - userAgent             : The user agent string of the shopper's browser (required).
     *     - acceptHeader          : The accept header string of the shopper's browser (required).
     */

    // Create new payment request
    PaymentRequest paymentRequest = new PaymentRequest();
    paymentRequest.merchantAccount = "YourMerchantAccount";
    paymentRequest.reference = "TEST-3D-SECURE-PAYMENT-" + DateTime.Now.ToString("yyyy-MM-dd-HH:mm:ss");
    paymentRequest.shopperIP = "123.123.123.123";
    paymentRequest.shopperEmail = "test@example.com";
    paymentRequest.shopperReference = "YourReference";
    paymentRequest.fraudOffset = 0;

    // Set amount
    Amount amount = new Amount();
    amount.currency = "EUR";
    amount.value = 199;
    paymentRequest.amount = amount;

    // Set card
    Card card = new Card();
    card.expiryMonth = "06";
    card.expiryYear = "2016";
    card.holderName = "John Doe";
    card.number = "5212345678901234";
    card.cvc = "737";

    Address billingAddress = new Address();
    billingAddress.street = "Simon Carmiggeltstraat";
    billingAddress.houseNumberOrName = "6-50";
    billingAddress.postalCode = "1011 DJ";
    billingAddress.city = "Amsterdam";
    billingAddress.stateOrProvince = "";
    billingAddress.country = "NL";

    paymentRequest.card = card;

    // Set browser info
    BrowserInfo browserInfo = new BrowserInfo();
    browserInfo.userAgent = Request.Headers["User-Agent"];
    browserInfo.acceptHeader = Request.Headers["Accept"];

    paymentRequest.browserInfo = browserInfo;

    /**
     * Send the authorise request.
     */
    PaymentResult paymentResult = client.authorise(paymentRequest);

    /**
     * Once your account is configured for 3-D Secure, the Adyen system performs a directory
     * inquiry to verify that the card is enrolled in the 3-D Secure programme.
     * If it is not enrolled, the response is the same as a normal API authorisation.
     * If, however, it is enrolled, the response contains these fields:
     *
     * - paRequest     : The 3-D request data for the issuer.
     * - md            : The payment session.
     * - issuerUrl     : The URL to direct the shopper to.
     * - resultCode    : The resultCode will be RedirectShopper.
     *
     * The paRequest and md fields should be included in an HTML form, which needs to be submitted
     * using the HTTP POST method to the issuerUrl. You must also include a termUrl parameter
     * in this form, which contains the URL on your site that the shopper will be returned to
     * by the issuer after authentication. In this example we are redirecting to another example
     * which completes the 3D Secure payment.
     *
     * @see Authorise3dSecurePayment.cshtml
     *
     * We recommend that the form is "self-submitting" with a fallback in case javascript is disabled.
     * A sample form is shown below.
     */
    if (paymentResult.resultCode.Equals("RedirectShopper"))
    {
    <!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8">
            <title>Adyen - Create 3D Secure Payment</title>
        </head>
        <body onload="document.getElementById('3dform').submit();">
            <form method="POST" action="@paymentResult.issuerUrl" id="3dform">
                <input type="hidden" name="PaReq" value="@paymentResult.paRequest" />
                <input type="hidden" name="MD" value="@paymentResult.md" />
                <input type="hidden" name="TermUrl" value="YOUR_URL_HERE/Authorise3dSecurePayment.cshtml" />
                <noscript>
                    <br>
                    <br>
                    <div style="text-align: center">
                        <h1>Processing your 3-D Secure Transaction</h1>
                        <p>Please click continue to continue the processing of your 3-D Secure transaction.</p>
                        <input type="submit" class="button" value="continue" />
                    </div>
                </noscript>
            </form>
        </body>
    </html>
    }
    else
    {
        <p><strong>Payment Result</strong></p>
        <ul>
            <li>pspReference: @paymentResult.pspReference</li>
            <li>resultCode: @paymentResult.resultCode</li>
            <li>authCode: @paymentResult.authCode</li>
            <li>refusalReason: @paymentResult.refusalReason</li>
        </ul>
    }
}